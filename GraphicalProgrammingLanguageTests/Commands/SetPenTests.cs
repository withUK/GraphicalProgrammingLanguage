using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Collections.Generic;

namespace GraphicalProgrammingLanguage.Commands.Tests
{
    /// <summary>
    /// Set of tests intended to test the core functionality of the SetPen command object.
    /// </summary>
    [TestClass()]
    public class SetPenTests
    {
        private MainGUI main = new MainGUI();

        /// <summary>
        /// Returns a true value when the acccepted variables have been passed.
        /// </summary>
        [DataTestMethod()]
        [DataRow("color", "red")]
        [DataRow("weight", "3")]
        public void HasRequiredParameters_ReturnsTrueWhenSetsParameters(string key, string value)
        {
            SetPen d = new SetPen(main);
            Dictionary<string, string> v = new Dictionary<string, string>();

            v.Add(key, value);
            d.set(v);

            Assert.IsTrue(d.hasRequiredParameters());
        }

        /// <summary>
        /// Returns a true value when the acccepted variables have been passed.
        /// </summary>
        [DataTestMethod()]
        [DataRow("color", "red")]
        [DataRow("weight", "3")]
        public void IsValid_ReturnsTrueWhenSetsParameters(string key, string value)
        {
            SetPen d = new SetPen(main);
            Dictionary<string, string> v = new Dictionary<string, string>();

            v.Add(key, value);
            d.set(v);

            Assert.IsTrue(d.IsValid(v));
        }

        /// <summary>
        /// Returns a false value when the accepted variables have not been passed.
        /// </summary>
        [TestMethod()]
        public void HasRequiredParameters_ReturnsFalseWhenSetsParameters()
        {
            SetPen d = new SetPen(main);
            Dictionary<string, string> v = new Dictionary<string, string>();

            v.Add("", null);
            d.set(v);

            Assert.IsFalse(d.hasRequiredParameters());
        }

        /// <summary>
        /// Returns a false value when the accepted variables have not been passed.
        /// </summary>
        [TestMethod()]
        public void IsValidParameters_ReturnsFalseWhenSetsParameters()
        {
            SetPen d = new SetPen(main);
            Dictionary<string, string> v = new Dictionary<string, string>();

            v.Add("", null);
            d.set(v);

            Assert.IsFalse(d.IsValid(v));
        }
    }
}